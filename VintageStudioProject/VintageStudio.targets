<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
  <!-- Collapse property groups ? -->

  <PropertyGroup>
    <BuildDependsOn>
      BeforeBuild;
      CoreBuild;
      AfterBuild
    </BuildDependsOn>
  </PropertyGroup>

  <Target Name="Build" DependsOnTargets="$(BuildDependsOn)"/>

    <Target Name="CoreBuild">
    <Message Text="Building: $(Name)" />
    <MakeDir Directories="$(OutputPath)" Condition="!Exists('$(OutputPath)')" />

    <PropertyGroup>
      <CompilerOutput Condition="$(CompilerOutput) == ''">$(OutputPath)$(OutputFileName)</CompilerOutput>
      <CompilerPath Condition="$(CompilerPath) == ''">64tass.exe</CompilerPath>
      <CompileCommand Condition="$(CompileCommand) == ''">$(CompilerPath) -o "$(CompilerOutput)" @(Compile)</CompileCommand>
      <CustomErrorRegularExpression Condition="$(CustomErrorRegularExpression) == ''">(?&lt;File&gt;^.+\..+):(?&lt;Line&gt;\d+): (?&lt;Message&gt;.+)</CustomErrorRegularExpression>
    </PropertyGroup>
    
    <Exec Command='$(CompileCommand)' IgnoreStandardErrorWarningFormat='true' CustomErrorRegularExpression="$(CustomErrorRegularExpression)"/>
  </Target>

  <!-- 
  This just make things easier - it is used to resolve assembly references in .NET Framework projects. We certainly don't care about this here but the virtual 
  method which this target is called from (ProjectNode.SetConfiguration(string config)) is using a bunch of private fields we don't have access to and therefore 
  is not easy to override.
  -->
  <Target Name="GetFrameworkPaths" />

  <Target Name="BeforeBuild" />
  <Target Name="AfterBuild" />
</Project>